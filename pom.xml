<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ru.gb.lessons</groupId>
  <artifactId>lessons-ui-autotests-february</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>lessons-ui-autotests-february</name>
  <packaging>jar</packaging>
  <properties>
    <selenide.version>6.4.0</selenide.version>
    <junit.version>5.8.2</junit.version>
    <aspectj.version>1.9.7</aspectj.version>
    <allure.version>2.17.3</allure.version>
  </properties>


 <dependencies>
<!--   <dependency>                                  при работе с селенидом данные библиотеки не нужны - так как содержат их
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.0.2</version>
    </dependency>-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.22</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.22.0</version>
    </dependency>


    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.2.11</version>
    </dependency>

    <!--        <dependency>-->
    <!--            <groupId>org.slf4j</groupId>-->
    <!--            <artifactId>slf4j-api</artifactId>-->
    <!--            <version>1.7.32</version>-->
    <!--            <scope>test</scope>-->
    <!--        </dependency>-->

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.11</version>
    </dependency>

    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-junit5</artifactId>
      <version>${allure.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.codeborne</groupId>
      <artifactId>selenide</artifactId>
      <version>${selenide.version}</version>
    </dependency>

   <dependency>
     <groupId>io.qameta.allure</groupId>
     <artifactId>allure-selenide</artifactId>
     <version>${allure.version}</version>
   </dependency>
   <dependency>
     <groupId>timbre-ns-pattern-level</groupId>
     <artifactId>timbre-ns-pattern-level</artifactId>
     <version>0.1.2</version>
     <scope>compile</scope>
   </dependency>
     <dependency>
         <groupId>mourjo</groupId>
         <artifactId>ring-devel</artifactId>
         <version>1.0.0-1.8.1</version>
         <scope>compile</scope>
     </dependency>

 </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.0</version>
        <configuration>
          <source>15</source>
          <target>15</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.11.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <testFailureIgnore>false</testFailureIgnore>
          <argLine>
            -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
          </argLine>
          <systemProperties>
            <property>
              <name>junit.jupiter.extensions.autodetection.enabled</name>
              <value>true</value>
            </property>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>2.11.2</version>
        <configuration>
          <reportVersion>${allure.version}</reportVersion>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>clojars</id>
      <name>Clojars</name>
      <url>https://repo.clojars.org/</url>
    </repository>
  </repositories>
</project>
<!--<?xml version="1.0" encoding="UTF-8"?>-->

<!--<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>-->

<!-- <groupId>ru.gb.lessons</groupId>-->
<!--<artifactId>lessons-ui-autotests-february</artifactId>-->
<!-- <version>1.0-SNAPSHOT</version>-->
  <!--<scope>test</scope>                                  //  <scope>test</scope - разграничение власти определенных библиотек (условия когда ее можно использовать) для папки test-->
  <!--<exclusions> исключения -->
  <!-- <groupId></groupId>
   <artifactId></artifactId>
 </exclusions>-->
<!--  <name>lessons-ui-autotests-february</name>-->
<!-- <packaging>jar</packaging>             -->                  <!--упаковывает проек в jar-->

<!-- <properties>                                             -добавляются версии библиотек, если хотим явно вынести наверх из dependency xnj , что бы видеть все зависимости вместе-->
<!--  <selenium.version>3.141.59</selenium.version>  -->        <!--можно указать в <properties> версию , заменив на такой скрипт для удобства если библиотек много-->
<!--  <junit.version>5.8.2</junit.version>  -->                 <!--добавляем зависимость в properties для упрощенного поиска по mavin-->
<!--  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
         <!--<maven.compiler.source>1.7</maven.compiler.source>  закрыл потому что плагин изменил на 7 версию
         <maven.compiler.target>1.7</maven.compiler.target>-->
<!-- </properties>-->

<!--<dependencies>-->

<!-- <dependency>-->
<!--  <groupId>org.seleniumhq.selenium</groupId>-->
<!-- <artifactId>selenium-java</artifactId>-->
<!-- <version>${selenium.version}</version>     -->              <!--можно указать в <properties> версию , заменив на такой скрипт для удобства если библиотек много-->
<!--  </dependency>-->
    <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<!--  <dependency>-->
<!-- <groupId>io.github.bonigarcia</groupId>-->
<!--  <artifactId>webdrivermanager</artifactId>-->
<!--  <version>5.1.0</version>-->
<!-- </dependency>-->
    <!-- https://mvnrepository.com/artifact/com.codeborne/selenide
    <dependency>
      <groupId>com.codeborne</groupId>
      <artifactId>selenide</artifactId>
      <version>5.25.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>-->
<!--  <dependency>                                            самый популярный Framework у тестировщиков на сегодня-->
<!--    <groupId>org.junit.jupiter</groupId>-->
<!--   <artifactId>junit-jupiter</artifactId>-->
<!--    <version>${junit.version}</version>-->
<!--  </dependency>-->
<!--  <dependency>-->
<!--   <groupId>org.seleniumhq.selenium</groupId>-->
        <!--   <artifactId>selenium-api</artifactId>-->
<!--     <version>3.141.59</version>-->
<!--   </dependency>-->
<!--   <dependency>-->
<!--    <groupId>org.testng</groupId>-->
<!--    <artifactId>testng</artifactId>-->
<!--    <version>RELEASE</version>-->
<!--     <scope>test</scope>-->
<!--   </dependency>-->
<!--   <dependency>      -->                                   <!--библиотечка избавляющая от лишнего кода (конструктора). что бы она нормально работала нужен плагин lombok-->
<!--     <groupId>org.projectlombok</groupId>-->
<!--    <artifactId>lombok</artifactId>-->
<!--    <version>1.18.22</version>-->
<!--   </dependency>-->
<!--   <dependency>     -->                                    <!--удобная библиотека по ассертам-->
<!--     <groupId>org.assertj</groupId>-->
        <!--     <artifactId>assertj-core</artifactId>-->
<!--     <version>3.22.0</version>-->
<!--    </dependency>-->
    <!-- <dependency>
     <groupId>org.example</groupId>                      -можно выставить зависимость к проекту example-->
      <!--<artifactId>example.project</artifactId>
      <version>2.0-SNAPSHOT</version>
    </dependency>-->
<!--  </dependencies>-->

<!--  <build>             -->                                   <!--   плагины (то что делает какие либо операции в mavin) нужны для выполнения каких либо действий-->
<!--   <plugins>-->
  <!--     <plugin>-->
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
<!--       <groupId>org.apache.maven.plugins</groupId>-->
<!--       <artifactId>maven-compiler-plugin</artifactId>-->
<!--       <version>3.10.0</version>-->
<!--       <configuration>            -->                      <!--настройки плагина-->
<!--       <source>15</source>          -->                  <!--указать какую версию java использовать-->
        <!--        <target>15</target>-->
        <!--      </configuration>-->
        <!--    </plugin>-->
      <!--   <plugin>                                           отвечает за тесты без них тесты будут падать-->
        <!--        https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
        <!--       <groupId>org.apache.maven.plugins</groupId>-->
        <!--     <artifactId>maven-surefire-plugin</artifactId>-->
        <!--       <version>3.0.0-M5</version>-->
        <!--     </plugin>-->
      <!--<plugin>
          <groupId>ru.yandex.qatools.allure</groupId>
          <artifactId>allure-maven-plugin</artifactId>
          <version>2.6</version>
      </plugin>-->
    <!-- <plugin>
        https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
    <!--   <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-site-plugin</artifactId>
       <version>3.11.0</version>
     </plugin>                                         <plugin>   добавление плагина  созданного в ручную
       <groupId>org.example</groupId>
       <artifactId>custom-plugin</artifactId>
       <version>1.0-SNAPSHOT</version>
     </plugin>
 </plugins>-->
<!-- <pluginManagement>--> <!--lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
    <!-- <plugins>
       clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
    <!--   <plugin>
         <artifactId>maven-clean-plugin</artifactId>
         <version>3.1.0</version>
       </plugin>
        default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
    <!--    <plugin>
          <artifactId>maven-resources-plugin</artifactId>
         <version>3.0.2</version>
       </plugin>
       <plugin>
         <artifactId>maven-compiler-plugin</artifactId>
         <version>3.8.0</version>
       </plugin>
       <plugin>
         <artifactId>maven-surefire-plugin</artifactId>
         <version>2.22.1</version>
       </plugin>
       <plugin>
         <artifactId>maven-jar-plugin</artifactId>
         <version>3.0.2</version>
       </plugin>
       <plugin>
         <artifactId>maven-install-plugin</artifactId>
         <version>2.5.2</version>
       </plugin>
       <plugin>
         <artifactId>maven-deploy-plugin</artifactId>
         <version>2.8.2</version>
       </plugin>
          site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
    <!--    <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
   </pluginManagement>-->
<!--</build>-->

